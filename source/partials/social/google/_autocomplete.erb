<%#
Autocomplete

@usage
= partial 'partials/social/google/autocomplete.erb'
<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places"></script>

@author Ian Warner <ian.warner@drykiss.com>
@category google

@todo The translation for the widget should be abstracted - and passed in from the class perhaps - like a key
%>

<%# Types - All, Establishments, Addresses, Geocode %>
<% type = locals[:type] || 'geocode' %>

<%# Country - ISO 3166-1 Alpha-2 compatible country code, Defaults to Ireland %>
<% country = locals[:country] || 'ie' %>

<%# Force selection %>
<% forceSelection = locals[:force] || 'true' %>

<%#Â Button %>
<% button = locals[:button] ? {append: {context: 'primary', extraClass: 'find-food__button', text: :'findFood.input.button', type: 'submit'}} : false %>

<%# Find food form %>
<form class="find-food__form" name="autocompleteForm" novalidate role="form" ng-submit="autocomplete.submit($event, autocompleteForm.$valid)">

  <%#
  Input - Google Places Search Box
  @todo Should wrap this in the Directive maybe to access the button also
  %>
  <%= partial 'partials/atom/input.erb', locals: {
    button: button,
    input: { attribute: { complete: 'autocomplete.complete' },
             autocomplete: 'off',
             data: {country: country, forceSelection: forceSelection, types: type},
             extraClass: 'googlePlacesAutocomplete',
             inputGroupClass: 'input-group input-group-lg',
             name: 'place',
             ng: {model: 'autocomplete.googlePlacesAutocompleteModel'},
             placeholder: :'findFood.input.placeholder',
             required: true,
             showError: false},
    label: {title: :'findFood.input.label', extraClass: locals[:extraClass] || false}} %>

</form>

<%# Autocomplete error - error and message need to be set %>
<div class="find-food__error ng-cloak" ng-if="autocomplete.showError">

  <%# Please select an address from the dropdown. %>
  <p ng-if="autocomplete.showErrorBlank">
    <%= t(:'findFood.error.blank') %>
  </p>

  <%# Sorry, we don't currently service this area. %>
  <p ng-if="autocomplete.showErrorNoService">
    <%= t(:'findFood.error.noService') %>
  </p>

  <%# Oops, that doesn't seem like a valid postcode! %>
  <p ng-if="autocomplete.showErrorYQL">
    {{autocomplete.errorMessage}}
  </p>

</div>
